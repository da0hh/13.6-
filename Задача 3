#include <iostream>
#include <string>
#include <cassert>
#include <vector>

using namespace std;

class EmbeddedStorage {
private:
    std::vector<int> db;    
    int capacity;          
    int size;              
    int head;              
    int tail;              

public:
    EmbeddedStorage() : capacity(20), size(0), head(0), tail(0) {
        db.resize(capacity);  
    }


    void add(int value) {
        if (size < capacity) {
            db[tail] = value;
            tail = (tail + 1) % capacity;
            size++;
        }
        else {
            head = (head + 1) % capacity;
            db[tail] = value;
            tail = (tail + 1) % capacity;
        }
    }

    void print() const {
        for (int i = 0; i < size; i++) {
            std::cout << db[(head + i) % capacity] << " ";
        }
        std::cout << std::endl;
    }
};

int main() {
    setlocale(LC_ALL, "RU");
    EmbeddedStorage storage;
    int input;

    while (true) {
        std::cout << "input number: ";
        std::cin >> input;

        if (input == -1) {
            std::cout << "output: ";
            storage.print();
            continue;
        }

        storage.add(input);
    }
}
